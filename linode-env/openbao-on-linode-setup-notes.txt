Assuming Linode spun up and you have root.

## Install ufw

> sudo apt-get install ufw
> sudo ufw allow 2022/tcp comment 'Open port ssh tcp port 2022'
> sudo ufw enable
> sudo ufw status

Status: active

To                         Action      From
--                         ------      ----
2022/tcp                   ALLOW       Anywhere                   # Open port ssh tcp port 2022
2022/tcp (v6)              ALLOW       Anywhere (v6)              # Open port ssh tcp port 2022

---------------

Looking here: https://openbao.org/downloads/

## Get system version.

> lsb_release -a

No LSB modules are available.
Distributor ID:	Debian
Description:	Debian GNU/Linux 11 (bullseye)
Release:	11
Codename:	bullseye

Get architecture

> dpkg --print-architecture

amd64

## Download appropriate package

Deb AMD64
https://github.com/openbao/openbao/releases/download/v2.0.1/bao_2.0.1_linux_amd64.deb

> wget https://github.com/openbao/openbao/releases/download/v2.0.1/bao_2.0.1_linux_amd64.deb

## Install

> sudo dpkg -i bao_2.0.1_linux_amd64.deb 

## Test run

> bao

## Post-installation hardening

> systemctl cat openbao

# /lib/systemd/system/openbao.service
[Unit]
Description="OpenBao - A tool for managing secrets"
Documentation=https://github.com/openbao/openbao/tree/main/website/content/docs
Requires=network-online.target
After=network-online.target
ConditionFileNotEmpty=/etc/openbao/openbao.hcl
StartLimitIntervalSec=60
StartLimitBurst=3

[Service]
Type=notify
EnvironmentFile=/etc/openbao/openbao.env
User=openbao
Group=openbao
ProtectSystem=full
ProtectHome=read-only
PrivateTmp=yes
PrivateDevices=yes
SecureBits=keep-caps
CapabilityBoundingSet=CAP_SYSLOG
NoNewPrivileges=yes
ExecStart=/usr/bin/bao server -config=/etc/openbao/openbao.hcl
ExecReload=/bin/kill --signal HUP $MAINPID
KillMode=process
KillSignal=SIGINT
Restart=on-failure
RestartSec=5
TimeoutStopSec=30
LimitNOFILE=65536
MemorySwapMax=0

[Install]
WantedBy=multi-user.target

----------> Verify MemorySwapMax=0

## Start server in dev mode

bao server -dev -dev-root-token-id="this-is-my-test-dev-token"

==> OpenBao server configuration:

Administrative Namespace: 
             Api Address: http://127.0.0.1:8200
                     Cgo: disabled
         Cluster Address: https://127.0.0.1:8201
   Environment Variables: HOME, LANG, LOGNAME, LS_COLORS, MOTD_SHOWN, PATH, PWD, SHELL, SHLVL, SSH_CLIENT, SSH_CONNECTION, SSH_TTY, TERM, USER, XDG_RUNTIME_DIR, XDG_SESSION_CLASS, XDG_SESSION_ID, XDG_SESSION_TYPE, _
              Go Version: go1.22.6
              Listener 1: tcp (addr: "127.0.0.1:8200", cluster address: "127.0.0.1:8201", max_request_duration: "1m30s", max_request_size: "33554432", tls: "disabled")
               Log Level: 
           Recovery Mode: false
                 Storage: inmem
                 Version: OpenBao v2.0.1, built 2024-09-03T19:57:34Z
             Version Sha: 88383dece6b4ff1b3b242280a54aeabef8101495

==> OpenBao server started! Log data will stream in below:

...

2024-09-07T22:50:28.233Z [INFO]  core: vault is unsealed
2024-09-07T22:50:28.236Z [INFO]  expiration: revoked lease: lease_id=auth/token/root/h018625094feba11c68fb67fe39c0de0261d712b2c8c96623a780f77830ec180c
2024-09-07T22:50:28.238Z [INFO]  core: successful mount: namespace="" path=secret/ type=kv version=""
2024-09-07T22:50:28.248Z [INFO]  secrets.kv.kv_f6ed00b2: collecting keys to upgrade
2024-09-07T22:50:28.248Z [INFO]  secrets.kv.kv_f6ed00b2: done collecting keys: num_keys=1
2024-09-07T22:50:28.248Z [INFO]  secrets.kv.kv_f6ed00b2: upgrading keys finished

...

You may need to set the following environment variables:

    $ export BAO_ADDR='http://127.0.0.1:8200'

The unseal key and root token are displayed below in case you want to
seal/unseal the Vault or re-authenticate.

## Test locally, from Linode

> export VAULT_TOKEN="this-is-my-test-dev-token"
> export OPENBAO_IP="127.0.0.1"
> export OPENBAO_PORT="8200"

### SET
> curl -X POST --header "X-Vault-Token: $VAULT_TOKEN" --header "Content-Type: application/json" --data '{"data": {"password": "OpenBao123"}}' http://$OPENBAO_IP:$OPENBAO_PORT/v1/secret/data/test-password-1

{"request_id":"52bd02e0-409e-f895-93bc-983834058311","lease_id":"","renewable":false,"lease_duration":0,"data":{"created_time":"2024-09-08T21:14:33.87319206Z","custom_metadata":null,"deletion_time":"","destroyed":false,"version":1},"wrap_info":null,"warnings":null,"auth":null}

### GET
> curl --header "X-Vault-Token: $VAULT_TOKEN" http://$OPENBAO_IP:$OPENBAO_PORT/v1/secret/data/test-password-1

{"request_id":"200b1d4a-b4e3-5d11-1931-7fa8e3173028","lease_id":"","renewable":false,"lease_duration":0,"data":{"data":{"password":"OpenBao123"},"metadata":{"created_time":"2024-09-08T21:14:33.87319206Z","custom_metadata":null,"deletion_time":"","destroyed":false,"version":1}},"wrap_info":null,"warnings":null,"auth":null}

## Open port 8200 in UFW

> sudo ufw allow proto tcp from any to any port 8200
> sudo ufw allow out proto tcp from any to any port 8200

> sudo ufw allow 8200/tcp comment 'Open port 8200 for OpenBao'

> sudo ufw status

Status: active

To                         Action      From
--                         ------      ----
2022/tcp                   ALLOW       Anywhere                   # Open port ssh tcp port 2022
8200/tcp                   ALLOW       Anywhere                  
2022/tcp (v6)              ALLOW       Anywhere (v6)              # Open port ssh tcp port 2022
8200/tcp (v6)              ALLOW       Anywhere (v6)             

8200/tcp                   ALLOW OUT   Anywhere                  
8200/tcp (v6)              ALLOW OUT   Anywhere (v6)             

## Prepare to test

> export VAULT_TOKEN="this-is-my-test-dev-token"
> export OPENBAO_IP="172.233.152.50" (Linode IP)
> export OPENBAO_PORT="8200" (Default port used by OpenBao)

